# -*- coding: utf-8 -*-

import sys
from apps import command
from apps import data_base
from apps import data_door
from apps.kamen_noznica_bumaga import player_vs_comp_normal
from apps import door

sys.path.insert(0, '/apps')


def private_message(vk_session, user_id, msg, vk_api, vkapi, L_message, LL_message, LLL_message):
    available_command = data_base.check_available_command(user_id)

    if msg == "–Ω–∞–∑–∞–¥":
        command.back(vk_session, user_id, available_command)

    elif available_command == "avaible_standart":

        if msg == "–Ω–∞—á–∞—Ç—å" or msg == "start":
            command.start(vk_session, user_id, vkapi)

        elif msg == "–Ω–∞ –∑–∞–≤—Ç—Ä–∞" or msg == "–Ω–∞ —Å–µ–≥–æ–¥–Ω—è":
            command.message_shedule(vk_session, user_id, msg, vk_api)

        elif msg == "‚òÅ–ø–æ–≥–æ–¥–∞" or msg == "‚òÅ":
            command.message_weather(vk_session, user_id)
        
        elif msg == "üìå–≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã" or msg == "üìå":
            command.message_important_date(vk_session, user_id)

        elif msg == "‚è∞—Ç–∞–π–º–µ—Ä –¥–æ –±–ª–∏–∂–∞–π—à–∏—Ö –∫–∞–Ω–∏–∫—É–ª" or msg == "‚è∞":
            command.timer_until_the_next_vacation(vk_session, user_id)

        elif msg == "‚òÄ—Ç–∞–π–º–µ—Ä –¥–æ –ª–µ—Ç–Ω–∏—Ö –∫–∞–Ω–∏–∫—É–ª" or msg == "‚òÄ":
            command.the_countdown_till_summer_vacation(vk_session, user_id)

        elif msg == "üì∞–Ω–æ–≤–æ—Å—Ç–∏ —à–∫–æ–ª—ã" or msg == "üì∞":
            command.notifications(vk_session, user_id)

        elif msg == "üìã–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏" or msg == "üìã":
            command.keyShedule(vk_session, user_id)

        elif msg == "‚ö†–æ—Å–æ–±–æ–µ" or msg == "‚ö†":
            command.special(vk_session, user_id)

        elif msg == "üè´–æ —à–∫–æ–ª–µ" or msg == "üè´":
            command.information_about_the_school(vk_session, user_id, vk_api)

        elif msg == "ü¶†–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or msg == "ü¶†":
            command.coronovirus(vk_session, user_id)

        elif msg == "üé≤—É—á–∏—Ç—å/–Ω–µ —É—á–∏—Ç—å" or msg == "üé≤":
            command.teach_or_not(vk_session, user_id)

        elif msg == "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª":
            command.functional(vk_session, user_id)

        elif msg == "üïπ–∏–≥—Ä—ã":
            command.keyGames(vk_session, user_id)
        
        elif msg == "–∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞":
            command.keyKamen_Noznica_Bumaga(vk_session, user_id, "Kamen_Noznica_Bumaga")
        
        elif msg == "üîÆ–≥–∞–¥–∞–ª–∫–∞":

            command.keyGadalka(vk_session, user_id, "Gadalka")

        elif msg == "üö™–¥–≤–µ—Ä–∏":
            data_door.registracion(user_id)
            NEW_GAME = data_door.start(user_id)
            command.keyDoor(vk_session, user_id, "Door")

            if NEW_GAME:
                command.doorstart(vk_session, user_id)

    elif available_command == "Kamen_Noznica_Bumaga":
        if msg == '–∫–∞–º–µ–Ω—å' or msg == "–Ω–æ–∂–Ω–∏—Ü—ã" or msg == "–±—É–º–∞–≥–∞":
            answer, bot = player_vs_comp_normal(msg)
            command.message_Kamen_Noznica_Bumaga(vk_session, user_id, bot, answer)

    elif available_command == "Gadalka":
        if msg == "üîÆ–ø–æ–≥–∞–¥–∞—Ç—å":
            command.Gadalka_instrukcion(vk_session, user_id)

        elif msg != "üîÆ–ø–æ–≥–∞–¥–∞—Ç—å" and msg != "–Ω–∞–∑–∞–¥" and msg != "üîÆ–≥–∞–¥–∞–ª–∫–∞":
            command.message_Gadalka(vk_session, user_id)

    elif available_command == "Door":
        if msg == "1" or msg == "2" or msg == "3":
            NEW_GAME = data_door.start(user_id)
            
            if NEW_GAME:
                command.doorstart(vk_session, user_id)

            event, lives_score = door.three_door(msg, user_id)
            command.message_Door(vk_session, user_id, event, lives_score)
            
        elif msg == "—Å—á–µ—Ç":
            NEW_GAME = data_door.start(user_id)

            if NEW_GAME:
                command.doorstart(vk_session, user_id)

            score = data_door.getting_score(user_id)
            command.DoorScore(vk_session, user_id, score)

        elif msg == "–∂–∏–∑–Ω–∏":
            NEW_GAME = data_door.start(user_id)
            
            if NEW_GAME:
                command.doorstart(vk_session, user_id)

            lives = data_door.getting_health(user_id)
            command.DoorLives(vk_session, user_id, lives)

        elif msg == "–º–æ–π —Ä–µ–∫–æ—Ä–¥":
            my_record = data_door.getting_my_record(user_id)
            command.Door_record(vk_session, user_id, my_record)

        elif msg == "—Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤":
            one, two, three, four, five = data_door.board_liders()
            leaders = data_door.getting_leaders(one, two, three, four, five) 
            command.Board_liders_Door(vk_session, user_id, leaders)

        elif msg == "–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
            command.Door_instrukcion(vk_session, user_id)





