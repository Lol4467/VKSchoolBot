# -*- coding: utf-8 -*-
import sys
sys.path.insert(0, '/apps')

from apps import command #–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π–≤—Å—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö (–∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ private_message) 
from apps import data_base
from apps import data_lessons
from apps import data_door
from apps.card import cards #–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω—Ü–∏–∏ cards –∏–∑ —Ñ–∞–π–ª–∞ card
from apps.card import checking_the_answer
from apps.card import grebanaya_proverka_12if
from apps.kamen_noznica_bumaga import player_vs_comp_normal
from apps import door


def private_message(vk_session,user_id,msg,vk_api,vkapi,L_message, LL_message,LLL_message): #—Ñ—É–Ω–∫—Ü–∏—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    available_command = data_base.check_available_command(user_id)
    
    if available_command == "avaible_standart":

        #–¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã "–Ω–∞—á–∞—Ç—å"
        if msg == "–ù–∞—á–∞—Ç—å" or msg == "–Ω–∞—á–∞—Ç—å" or msg == "Start":
            available_command = "avaible_standart"
            command.msgstart(vk_session,user_id,msg,vk_api,vkapi,available_command)
        
        #–¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã "hepl"
        #elif msg == "Help" or msg == "help":
        #    available_command = "avaible_standart"
        #    command.Help(vk_session,user_id,msg,vk_api,available_command)

        #–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤ shedule
        elif msg == "–Ω–∞ –∑–∞–≤—Ç—Ä–∞" or msg == "–ù–∞ –∑–∞–≤—Ç—Ä–∞" or msg == "–Ω–∞ —Å–µ–≥–æ–¥–Ω—è" or msg == "–ù–∞ —Å–µ–≥–æ–¥–Ω—è":
            available_command = "avaible_standart"
            command.msgshedule(vk_session,user_id,msg,vk_api,available_command)

        #–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤ weather
        elif msg == "‚òÅ–ü–æ–≥–æ–¥–∞" or msg == "‚òÅ":
            available_command = "avaible_standart"
            command.msgweather(vk_session,user_id,msg,vk_api,available_command)
        
        elif msg == "üìå–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã" or msg == "üìå":
            available_command = "avaible_standart"
            command.msgimportant_date(vk_session,user_id,msg,vk_api,available_command)
        
        #–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤ timers
        elif msg == "‚è∞–¢–∞–π–º–µ—Ä –¥–æ –±–ª–∏–∂–∞–π—à–∏—Ö –∫–∞–Ω–∏–∫—É–ª" or msg == "‚è∞":
            available_command = "avaible_standart"
            command.timer_until_the_next_vacation(vk_session,user_id,msg,vk_api,available_command)

        #–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤ timers
        elif msg == "‚òÄ–¢–∞–π–º–µ—Ä –¥–æ –ª–µ—Ç–Ω–∏—Ö –∫–∞–Ω–∏–∫—É–ª" or msg == "‚òÄ":
            available_command = "avaible_standart"
            command.the_countdown_till_summer_vacation(vk_session,user_id,msg,vk_api,available_command)

        #–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—å—Å—è —Å—Å—ã–ª–∫–∞ ,–ø–µ—Ä–µ–π–¥—è –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω –º–æ–∂–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∫)    
        elif msg == "üì∞–ù–æ–≤–æ—Å—Ç–∏ —à–∫–æ–ª—ã" or msg == "üì∞" or msg == "–ù–æ–≤–æ—Å—Ç–∏" or msg == "–Ω–æ–≤–æ—Å—Ç–∏":
            available_command = "avaible_standart"
            command.notifications(vk_session,user_id,msg,vk_api,available_command)

        #–¥–∞–µ—Ç—å—Å—è –≤—ã–±—Ä–∞—Ç—å –Ω–∞ –∫–æ–∫–æ–π –¥–µ–Ω—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è(—Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞)
        elif msg == "üìã–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏" or msg == "üìã":
            available_command = "avaible_standart"
            command.keyShedule(vk_session,user_id,msg,vk_api,available_command)

        #–ø–µ—Ä–µ—Ö–æ–¥ –≤–æ –≤–∫–ª–∞–¥–∫—É "–æ—Å–æ–±–æ–µ" 
        elif msg == "‚ö†–û—Å–æ–±–æ–µ" or msg == "‚ö†":
            available_command = "avaible_standart"
            command.special(vk_session,user_id,msg,vk_api,available_command)
        
        #–º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ –∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç 
        elif msg == "üè´–û —à–∫–æ–ª–µ" or msg == "üè´":
            available_command = "avaible_standart"
            command.information_about_the_school(vk_session,user_id,msg,vk_api,available_command)

        #–ø—Ä–∏—Å—ã–ª–∞–µ—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å—É –≤ –†–æ—Å—Å–∏–∏
        elif msg == "ü¶†–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å" or msg == "ü¶†":
            available_command = "avaible_standart" 
            command.coronovirus(vk_session,user_id,msg,vk_api,available_command)
        
        #—Å–¥–µ–ª–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏(–∏–¥–µ—è)
        elif msg == "‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏" or msg == "‚öô":
            available_command = "avaible_standart"
            command.settings(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "üóøStandart" or msg == "üóø":
            key = "standart"
            available_command = "avaible_standart"
            command.keyCustomization(vk_session,user_id,msg,vk_api,key,available_command)
        
        elif msg == "üëëPRO" or msg == "üëë":
            key = "pro"
            available_command = "avaible_standart"
            command.keyCustomization(vk_session,user_id,msg,vk_api,key,available_command)

        elif msg == "üÉè–ö–∞—Ä—Ç–æ—á–∫–∏" or msg == "üÉè":
            available_command = "avaible_standart"
            command.cards(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "–ö–æ—Ä–æ—Ç–∫–æ –æ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö":
            available_command = "avaible_standart"
            command.briefly_about_cards(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "üé≤–£—á–∏—Ç—å/–ù–µ —É—á–∏—Ç—å" or msg == "üé≤":
            available_command = "avaible_standart"
            command.teach_or_not(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª" or msg == "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª":
            available_command = "avaible_standart"
            command.functional(vk_session,user_id,msg,vk_api,vkapi,available_command)

        elif msg == "‚å®–í–∏–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã" or msg == "‚å®":
            available_command = "avaible_standart"
            command.customization(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "üå§–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–≥–æ–¥—ã" or msg == "üå§":
            available_command = "avaible_standart"
            command.WeatherForUser(vk_session,user_id,msg,vk_api,available_command)
        
        elif msg == "‚úÖ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è" or msg == "‚úÖ":
            available_command = "avaible_standart"
            command.subscription_for_weather(vk_session,vk_api,user_id)
        
        elif msg == "‚ùå–û—Ç–ø–∏—Å–∞—Ç—å—Å—è" or msg == "‚ùå":
            available_command = "avaible_standart"
            command.delite_subscription_for_weather(vk_session,vk_api,user_id)
        
        elif msg == "–ö–æ—Ä–æ—Ç–∫–æ –æ —Ä–∞—Å—Å—ã–ª–∫–µ –ø–æ–≥–æ–¥—ã":
            available_command = "avaible_standart"
            command.subscription_weather(vk_session,user_id,vk_api)

        elif msg == "üïπ–ò–≥—Ä—ã":
            available_command = "avaible_standart"
            command.keyGames(vk_session,user_id,vk_api)
        
        elif msg == "–ö–∞–º–µ–Ω—å/–ù–æ–∂–Ω–∏—Ü—ã/–ë—É–º–∞–≥–∞":
            available_command = "Kamen_Noznica_Bumaga"
            command.keyKamen_Noznica_Bumaga(vk_session,user_id,vk_api,available_command)
        
        elif msg == "üîÆ–ì–∞–¥–∞–ª–∫–∞":
            available_command = "Gadalka"
            command.keyGadalka(vk_session,user_id,vk_api,available_command)

        elif msg == "üö™–î–≤–µ—Ä–∏":
            available_command = "Door"
            data_door.registracion(user_id)
    
            NEW_GAME = data_door.start(user_id)
                
            command.keyDoor(vk_session,user_id,vk_api,available_command)
            if NEW_GAME == True:
                command.doorstart(vk_session,user_id,vk_api)
        
        elif msg == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è":
            available_command = "available_only_cards_check"
            command.check_Cards(vk_session,user_id,msg,vk_api,available_command)

        elif msg == "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É":
            available_command = "available_only_cards_record"
            command.record_Cards(vk_session,user_id,msg,vk_api,available_command)
            

    if available_command == "available_only_cards_check":
        available_command = "available_only_cards_check"
        if msg == "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É" or msg == "–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" or L_message == "–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" or LL_message == "–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" :
                if msg == "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É":
                    command.delete_a_card(vk_session,user_id,LL_message)
                else:
                    last_lesson = data_lessons.getting_last_lesson(user_id)
                    if last_lesson != "None":
                        if msg == "–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞":
                            msg = last_lesson
                        if L_message == "–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞":
                            L_message = last_lesson
                        grebanaya_proverka_12if(msg,L_message,user_id)
                        checking_the_answer(user_id, msg, L_message,vk_session,vk_api)
                        answer = "–≤—Å–µ –æ–∫"
                        command.next_card(vk_session,user_id,msg,vk_api,available_command,answer)
                    else:
                        answer = "—Å–µ–π—á–∞—Å —ç—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
                        command.next_card(vk_session,user_id,msg,vk_api,available_command,answer)

        elif msg == "—Ç–§–∏–∑–∏–∫–∞" or L_message == "—Ç–§–∏–∑–∏–∫–∞" or msg == "—Ç–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" or L_message == "—Ç–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" or msg == "—Ç–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or L_message == "—Ç–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or msg == "—Ç–û–ë–ñ" or L_message == "—Ç–û–ë–ñ" or msg == "—Ç–ë–∏–æ–ª–æ–≥–∏—è" or L_message == "—Ç–ë–∏–æ–ª–æ–≥–∏—è" or msg == "—Ç–ú—É–∑—ã–∫–∞" or L_message == "—Ç–ú—É–∑—ã–∫–∞" or msg == "—Ç–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ" or L_message == "—Ç–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ" or msg == "—Ç–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞" or L_message == "—Ç–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞" or msg == "—Ç–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" or L_message == "—Ç–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" or msg == "—Ç–ù–µ–º–µ—Ü–∫–∏–π" or L_message == "—Ç–ù–µ–º–µ—Ü–∫–∏–π" or msg == "—Ç–†—É—Å—Å–∫–∏–π" or L_message == "—Ç–†—É—Å—Å–∫–∏–π" or msg == "—Ç–•–∏–º–∏—è" or L_message == "—Ç–•–∏–º–∏—è" or msg == "—Ç–ò—Å—Ç–æ—Ä–∏—è" or L_message == "—Ç–ò—Å—Ç–æ—Ä–∏—è" or msg == "—Ç–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π" or L_message == "—Ç–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π" or msg == "—Ç–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è" or L_message == "—Ç–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è" or msg == "—Ç–ê–ª–≥–µ–±—Ä–∞" or L_message == "—Ç–ê–ª–≥–µ–±—Ä–∞":
            grebanaya_proverka_12if(msg,L_message,user_id)
            checking_the_answer(user_id, msg, L_message,vk_session,vk_api)
        
        elif msg == "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É":
            command.delete_a_card(vk_session,user_id,LL_message)


    if available_command == "available_only_cards_record":
        available_command = "available_only_cards_record"
        if msg == "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" or msg == "–ë–∏–æ–ª–æ–≥–∏—è" or msg == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" or msg == "–ò—Å—Ç–æ—Ä–∏—è" or msg == "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or msg == "–ú—É–∑—ã–∫–∞" or msg == "–ù–µ–º–µ—Ü–∫–∏–π" or msg == "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π" or msg == "–û–ë–ñ" or msg == "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ" or msg == "–†—É—Å—Å–∫–∏–π" or msg == "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è" or msg == "–§–∏–∑–∏–∫–∞" or msg == "–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞" or msg == "–•–∏–º–∏—è" or msg == "–ê–ª–≥–µ–±—Ä–∞" or L_message == "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" or L_message == "–ë–∏–æ–ª–æ–≥–∏—è" or L_message == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" or L_message == "–ò—Å—Ç–æ—Ä–∏—è" or L_message == "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or L_message == "–ú—É–∑—ã–∫–∞" or L_message == "–ù–µ–º–µ—Ü–∫–∏–π" or L_message == "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π" or L_message == "–û–ë–ñ" or L_message == "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ" or L_message == "–†—É—Å—Å–∫–∏–π" or L_message == "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è" or L_message == "–§–∏–∑–∏–∫–∞" or L_message == "–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞" or L_message == "–•–∏–º–∏—è" or L_message == "–ê–ª–≥–µ–±—Ä–∞" or LL_message == "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" or LL_message == "–ë–∏–æ–ª–æ–≥–∏—è" or LL_message == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" or LL_message == "–ò—Å—Ç–æ—Ä–∏—è" or LL_message == "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or LL_message == "–ú—É–∑—ã–∫–∞" or LL_message == "–ù–µ–º–µ—Ü–∫–∏–π" or LL_message == "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π" or LL_message == "–û–ë–ñ" or LL_message == "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ" or LL_message == "–†—É—Å—Å–∫–∏–π" or LL_message == "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è" or LL_message == "–§–∏–∑–∏–∫–∞" or LL_message == "–§–∏–∑–∫—É–ª—å—Ç—É—Ä–∞" or LL_message == "–•–∏–º–∏—è" or LL_message == "–ê–ª–≥–µ–±—Ä–∞":
            cards(vk_session,user_id, msg, L_message, LL_message)

    if available_command == "Kamen_Noznica_Bumaga":
        if msg == '–ö–∞–º–µ–Ω—å' or msg == "–ù–æ–∂–Ω–∏—Ü—ã" or msg == "–ë—É–º–∞–≥–∞":
            answer,bot = player_vs_comp_normal(msg)
            command.msgKamen_Noznica_Bumaga(vk_session,user_id,vk_api,bot,answer)

    if available_command == "Gadalka":
        if msg == "üîÆ–ü–æ–≥–∞–¥–∞—Ç—å":
            command.Gadalka_instrukcion(vk_session,user_id,vk_api)
        elif msg != "üîÆ–ü–æ–≥–∞–¥–∞—Ç—å" and msg != "–ù–∞–∑–∞–¥" and msg != "üîÆ–ì–∞–¥–∞–ª–∫–∞":
            command.msgGadalka(vk_session,user_id,vk_api)

    if available_command == "Door":
        if msg == "1" or msg == "2" or msg == "3":
            NEW_GAME = data_door.start(user_id)
            
            if NEW_GAME == True:
                command.doorstart(vk_session,user_id,vk_api)

            event, lives_score = door.three_door(msg,user_id)
            command.msgDoor(vk_session,user_id,vk_api,event, lives_score)
            
        elif msg == "–°—á–µ—Ç":
            NEW_GAME = data_door.start(user_id)

            if NEW_GAME == True:
                command.doorstart(vk_session,user_id,vk_api)

            score = data_door.getting_score(user_id)
            command.DoorScore(vk_session,user_id,vk_api,score)

        elif msg == "–ñ–∏–∑–Ω–∏": 
            NEW_GAME = data_door.start(user_id)
            
            if NEW_GAME == True:
                command.doorstart(vk_session,user_id,vk_api)

            lives = data_door.getting_health(user_id)
            command.DoorLives(vk_session,user_id,vk_api,lives)

        elif msg == "–ú–æ–π —Ä–µ–∫–æ—Ä–¥": 
            my_record = data_door.getting_my_record(user_id)
            command.Door_record(vk_session,user_id,vk_api,my_record)

        elif msg == "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤":
            one, two, three, four, five = data_door.board_liders()
            leaders = data_door.getting_leaders(one, two, three, four, five) 
            command.Board_liders_Door(vk_session,user_id,vk_api,leaders)

        elif msg == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
            command.Door_instrukcion(vk_session,user_id,vk_api)

    #–±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –≤ data_base
    if msg == "–ù–∞–∑–∞–¥":
        available_command = "avaible_standart"
        sequence = command.debugger2(user_id)
        sequence = sequence[0]
        if sequence == "None":
            command.back(vk_session,user_id,msg,vk_api,available_command)
            mistake = "–≤—Å–µ –æ–∫"
            command.debugger1(vk_session,user_id,msg,vk_api,mistake)
        else: 
            lesson_now = None
            data_base.sequence(user_id,lesson_now)
            mistake = "cards"
            command.debugger1(vk_session,user_id,msg,vk_api,mistake)
   
    
    #–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ—á–µ–∫ —à–∫–æ–ª—ã(–∏–¥–µ—è)
    #elif msg == "–ø":
        #command.inline(vk_session,user_id,msg,vk_api)

def chatbot(vk_session,vk_api,chat_msg,vkapi,chat_peer_id):
    
    if chat_msg == "–∫–æ–º–∞–Ω–¥—ã":
        command.command_help_chat(vkapi,chat_peer_id)
    
    elif chat_msg == "—Ç–∞–π–º–µ—Ä –¥–æ –ª–µ—Ç–∞":
        command.the_countdown_till_summer_chat(vkapi,chat_peer_id)
    
    elif chat_msg == "—Ç–∞–π–º–µ—Ä –¥–æ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–∞–Ω–∏–∫—É–ª":
        command.identification_holidays_chat(vkapi,chat_peer_id)

    elif chat_msg == "–∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞":
        command.shedule_chat_tomorrow(vk_session,vk_api,vkapi,chat_peer_id)
    
    elif chat_msg == "–∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è":
        command.shedule_chat_today(vk_session,vk_api,vkapi,chat_peer_id)
    
    elif chat_msg == "–ø–æ–≥–æ–¥–∞":
        command.msgweather_chat(vkapi,chat_peer_id)


