import sys

from apps import keyboards
from apps import data_base

from apps.form_for_send_message import private_send_message

sys.path.insert(1, '/apps')


def start(vk_session, user_id, vkapi):  # "–Ω–∞—á–∞—Ç—å"
    import config

    user_name = data_base.information_user(vkapi, user_id)

    data_base.now_Keyboard(user_id, keyboard="keyMenu")  # –∑–∞–ø–∏—Å—å –≤ –ë–î –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private_send_message(vk_session, user_id, user_name + config.start_text, None, keyboards.keyMenu)


def message_shedule(vk_session, user_id, msg, vk_api):  # '–Ω–∞ –∑–∞–≤—Ç—Ä–∞', '–Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
    from apps import shedule
    import config

    tomorrow = False
    if msg == "–Ω–∞ –∑–∞–≤—Ç—Ä–∞":
        tomorrow = True

    shedule.get_schedule(tomorrow)  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    attachments = shedule.check_tomorrow(vk_session, vk_api, tomorrow)  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–∏–Ω–∫–µ
    
    if tomorrow:
        if attachments == None:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            private_send_message(vk_session, user_id, config.shedule_tomorrow_True_text_if_not, None, None)
        else:
            private_send_message(vk_session, user_id, config.shedule_tomorrow_True_text_if_there_is, attachments, None)
    else:
        if attachments == None:
            private_send_message(vk_session, user_id, config.shedule_tomorrow_False_text_if_not, None, None)
        else:
            private_send_message(vk_session, user_id, config.shedule_tomorrow_False_text_if_there_is, attachments, None)


def message_weather(vk_session, user_id):  # '–ü–æ–≥–æ–¥–∞'
    from apps import weather

    temp, wind_speed, cloudiness = weather.get_weather()  # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≥–æ–¥—ã

    data_base.now_Keyboard(user_id, keyboard="keyMenu")
    private_send_message(vk_session, user_id, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + temp + "\n" + cloudiness + "\n" + "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: "
                         + wind_speed + "–º/—Å", None, keyboards.keyMenu)


def message_important_date(vk_session, user_id):  # '–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã'

    data_base.now_Keyboard(user_id, keyboard="keyTimers")
    private_send_message(vk_session, user_id, "–°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ‚ö†", None, keyboards.keyTimers)


def timer_until_the_next_vacation(vk_session, user_id):  # '‚è∞–¢–∞–π–º–µ—Ä –¥–æ –±–ª–∏–∂–∞–π—à–∏—Ö –∫–∞–Ω–∏–∫—É–ª'
    from apps import timers

    data_base.now_Keyboard(user_id, keyboard="keyTimers")
    remained_until_holidays = timers.identification_holidays()  # –ø–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—â–∏—Ö –∫–∞–Ω–∏–∫—É–ª
    private_send_message(vk_session, user_id, remained_until_holidays, None, keyboards.keyTimers)


def the_countdown_till_summer_vacation(vk_session, user_id):  # '‚òÄ–¢–∞–π–º–µ—Ä –¥–æ –ª–µ–Ω–∏—Ö –∫–∞–Ω–∏–∫—É–ª'
    from apps import timers

    data_base.now_Keyboard(user_id, keyboard="keyTimers")
    summer = timers.the_countdown_till_summer()  # –≤—ã—Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –ª–µ—Ç–Ω–∏—Ö –∫–∞–Ω–∏–∫—É–ª
    private_send_message(vk_session, user_id, summer, None, keyboards.keyTimers)


def back(vk_session, user_id, available_command):  # '–ù–∞–∑–∞–¥'
    keyboard = data_base.Back(user_id)  # –≤—ã–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    data_base.record_available_command(user_id, "avaible_standart")

    if keyboard == "–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ":  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–µ–Ω –ª–∏ —Ö–æ–¥ –Ω–∞–∑–∞–¥
        private_send_message(vk_session, user_id, "–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ\nP.S –µ—Å–ª–∏ —É –≤–∞—Å —á—Ç–æ —Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–∞—á–∞—Ç—å'",
                             None, None)
    
    elif keyboard == "keyMenu":
        private_send_message(vk_session, user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", None, keyboards.keyMenu)
    
    elif keyboard == "keySpecial":
        private_send_message(vk_session, user_id, "‚ö†–û—Å–æ–±–æ–µ", None, keyboards.keySpecial)
    
    elif keyboard == "keyGames":
        private_send_message(vk_session, user_id, 'üïπ–ò–≥—Ä—ã', None, keyboards.keyGames)


def notifications(vk_session, user_id):  # "üì∞–Ω–æ–≤–æ—Å—Ç–∏ —à–∫–æ–ª—ã"

    data_base.now_Keyboard(user_id, keyboard="keyMenu")
    private_send_message(vk_session, user_id,
                         "–ß—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∏—Ö", None, keyboards.keySchoolnews)


def keyShedule(vk_session, user_id):  # 'üìã–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏'

    data_base.now_Keyboard(user_id, keyboard="keyMenuPRO")
    private_send_message(vk_session, user_id, "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏...\n ", None, keyboards.keyShedule)


def special(vk_session, user_id):  # "–û—Å–æ–±–æ–µ"

    data_base.now_Keyboard(user_id, keyboard="keySpecial")
    private_send_message(vk_session, user_id, "‚ö†–û—Å–æ–±–æ–µ", None, keyboards.keySpecial)


def coronovirus(vk_session, user_id):  # "–ö–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å"
    import requests
    from bs4 import BeautifulSoup

    url = "https://xn--80aesfpebagmfblc0a.xn--p1ai/"
    soup = BeautifulSoup(requests.get(url).content, "html.parser")
    convert = soup.findAll("div", {"class": "cv-countdown__item-value"})
    information = "–î–ê–ù–ù–´–ï –ü–û –†–û–°–°–ò–ò \n–ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–´ –°–ê–ô–¢–û–ú —Å—Ç–æ–ø–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å.—Ä—Ñ\n"
    information += "\n–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: " + convert[0].text
    information += "\n–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: " + convert[1].text
    information += "\n–ó–∞–±–æ–ª–µ–≤—à–∏—Ö –∑–∞ —Å—É—Ç–∫–∏: " + convert[2].text
    information += "\n–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: " + convert[3].text
    information += "\n–£–º–µ—Ä–ª–æ: " + convert[4].text

    data_base.now_Keyboard(user_id, keyboard="keySpecial")
    private_send_message(vk_session, user_id, information, None, keyboards.keySpecial)


def information_about_the_school(vk_session, user_id, vk_api):  # "–û —à–∫–æ–ª–µ"
    import config
    attachments = []

    data_base.now_Keyboard(user_id, keyboard="keyMenu")
    upload = vk_api.VkUpload(vk_session)
    photo = upload.photo_messages(photos="images/school.jpg")[0]
    attachments.append('photo{}_{}'.format(photo['owner_id'], photo['id']))
    private_send_message(vk_session, user_id, config.school_information, attachments, keyboards.keySchool_website)


def keyGames(vk_session, user_id):
    data_base.now_Keyboard(user_id, keyboard="keyGames")
    private_send_message(vk_session, user_id, "üïπ–ò–≥—Ä—ã", None, keyboards.keyGames)


def keyKamen_Noznica_Bumaga(vk_session, user_id, available_command):
    data_base.record_available_command(user_id, available_command)
    data_base.now_Keyboard(user_id, keyboard="keyKamen_Noznica_Bumaga")
    private_send_message(vk_session, user_id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–≥—Ä–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ö–ê–ú–ï–ù–¨ –ù–û–ñ–ù–ò–¶–´ –ë–£–ú–ê–ì–ê!!!\n\n"
                                              "–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –≤—ã–±–∏—Ä–∏—Ç–µ –∑–∞ —á—Ç–æ –≤—ã –±—É–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å", None,
                                              keyboards.keyKamen_Noznica_Bumaga)


def message_Kamen_Noznica_Bumaga(vk_session, user_id, bot, answer):
    private_send_message(vk_session, user_id, "3!!!", None, None)
    private_send_message(vk_session, user_id, "2!!!", None, None)
    private_send_message(vk_session, user_id, "1!!!", None, None)

    private_send_message(vk_session, user_id, bot, None, None)
    private_send_message(vk_session, user_id, answer, None, None)


def keyGadalka(vk_session, user_id, available_command):
    data_base.record_available_command(user_id, available_command)
    data_base.now_Keyboard(user_id, keyboard="keyGadalka")
    private_send_message(vk_session, user_id, "üîÆ–ì–∞–¥–∞–ª–∫–∞", None, keyboards.keyGadalka)


def Gadalka_instrukcion(vk_session, user_id):
    private_send_message(vk_session, user_id, "–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω–µ –¥–∞–µ—Ç –ø–æ–∫–æ—è \n\n–ò –Ø "
                                              "–í–ê–°–ò–õ–ò–°–ê –ü–ï–¢–†–û–í–ù–ê - –í–ï–õ–ò–ß–ê–ô–©–ê–Ø –ì–ê–î–ê–õ–ö–ê –ù–ê –°–ò–ï –®–ê–†–ï "
                                              "–¥–∞–º –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç!!!", None, None)


def message_Gadalka(vk_session, user_id):
    import random

    answers = ["–ê–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ!", "–î–∞", "–ù–µ—Ç", "–°–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç", "–ù–µ —É–≤–µ—Ä–µ–Ω–∞...", "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –Ω–µ—Ç!",
               "–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ñ–∞–Ω–∞—Ç –∞–Ω–∏–º–µ", "—É —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
               "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–ê –∫–∞–∫ –∂–µ –∏–Ω–∞—á–µ?", "–î–∞, –Ω–æ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç—ã –Ω–µ —Å–º–æ—Ç—Ä–∏—à—å –∞–Ω–∏–º–µ",
               "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª", "–ù–µ –∑–Ω–∞—é", "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ",
               "–ù–µ –º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç"]

    private_send_message(vk_session, user_id, "üîÆ" + random.choice(answers), None, None)


def keyDoor(vk_session, user_id, available_command):
    data_base.record_available_command(user_id, available_command)
    data_base.now_Keyboard(user_id, keyboard="keyDoor")
    private_send_message(vk_session, user_id, "üö™–î–≤–µ—Ä–∏", None, keyboards.keyDoor)


def message_Door(vk_session, user_id, event, lives_score):
    if lives_score is None:
        private_send_message(vk_session, user_id, event, None, None)
    else:
        private_send_message(vk_session, user_id, event + lives_score, None, None)


def doorstart(vk_session, user_id):
    private_send_message(vk_session, user_id, '–ù–æ–≤–∞—è –∏–≥—Ä–∞', None, None)


def DoorScore(vk_session, user_id, score):
    private_send_message(vk_session, user_id, '–í–∞—à —Å—á–µ—Ç: ' + str(score), None, None)


def DoorLives(vk_session, user_id, lives):
    private_send_message(vk_session, user_id, "–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å: " + str(lives) + " ‚ù§", None, None)


def Door_record(vk_session, user_id, my_record):  # "–ú–æ–π —Ä–µ–∫–æ—Ä–¥"
    private_send_message(vk_session, user_id, "–í–∞—à —Ä–µ–∫–æ—Ä–¥: " + str(my_record) + " –±–∞–ª–ª–æ–≤", None, None)


def Door_instrukcion(vk_session, user_id):  # "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    private_send_message(vk_session, user_id, "üö™–î–≤–µ—Ä–∏ - —ç—Ç–æ –∏–≥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç —Ç–µ–±—è –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ –≤ –∫–æ—Ç–æ—Ä–æ–º "
                                              "–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –∏ –∏–∑ –∫–∞–∂–¥–æ–π –µ—Å—Ç—å –ø–æ 3 –≤—ã—Ö–æ–¥–∞ –≤ "
                                              "—Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–Ω–∞—Ç—É, –Ω–æ –Ω–µ —Å—Ç–æ–∏—Ç —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è, –≤ –∫–∞–∂–¥–æ–π –∫–æ–º–Ω–∞—Ç–µ —Ç—ã –º–æ–∂–µ—à—å "
                                              "–æ—Ç–∫—Ä—ã—Ç—å –ª–∏—à—å 1 –¥–≤–µ—Ä—å –∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ –Ω–µ –±—É–¥–µ—Ç, —Å–æ —Å—Ç–∞—Ä—Ç–∞ —É —Ç–µ–±—è –µ—Å—Ç—å 3"
                                              " –∂–∏–∑–Ω–∏, –æ–Ω–∏ –æ–±–æ–∑–Ω–∞—á–∞—é—Ç—Å—è —Å–µ—Ä–¥–µ—á–∫–∞–º–∏ –∏ –ø—Ä–æ—Ö–æ–¥—è —á–µ—Ä–µ–∑ –∫–∞–∂–¥—É—é –∫–æ–º–Ω–∞—Ç—É ,–Ω–µ"
                                              " –≤–∞–∂–Ω–æ —á—Ç–æ –≤ –Ω–µ–π –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å —Ç–µ–±–µ –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –ø–æ 100 –æ—á–∫–æ–≤ ,–ø–æ "
                                              "–æ–∫–æ–Ω—á–∞–Ω–∏—é –∏–≥—Ä—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –±–∞–ª–æ–≤ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –≤ '–ú–æ–π"
                                              " —Ä–µ–∫–æ—Ä–¥', –µ—Å–ª–∏ —Ç—ã –Ω–∞–±—Ä–∞–ª –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –±–∞–ª–æ–≤, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∏—Å–∫–∞—Ç—å —Å–µ–±—è "
                                              "–≤ —Å–ø–∏—Å–∫–µ –ª–∏–¥–µ—Ä–æ–≤, –∫—Ç–æ –∑–Ω–∞–µ—Ç, –≤–¥—Ä—É–≥ —Ç—ã —Å—Ç–∞–ª –º–∏—Ä–æ–≤—ã–º —á–µ–º–ø–∏–æ–Ω–æ–º –ø–æ "
                                              "–æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—é –¥–≤–µ—Ä–µ–π üòâ", None, None)


def Board_liders_Door(vk_session, user_id, leaders):  # "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"
    private_send_message(vk_session, user_id, leaders, None, None)


def teach_or_not(vk_session, user_id):  # "üé≤–£—á–∏—Ç—å/–ù–µ —É—á–∏—Ç—å"
    import random

    random_number = random.randint(1, 100)

    if random_number < 2:
        teach = "–¢–µ–±–µ –ø–æ–≤–µ–∑–ª–æ)\n–ú–æ–∂–µ—à—å –Ω–µ —É—á–∏—Ç—åü§ê"
    else:
        teach = "–£—á–∏ –¥–∞–≤–∞–πüôÉ\n–£–¥–∞—á–∏üçÄ"

    private_send_message(vk_session, user_id, teach, None, None)
